Given a string consisting of only 0, 1, A, B, C where
A = AND
B = OR
C = XOR
Calculate the value of the string assuming no order of precedence and evaluation is done from left to right.

Constraints â€“ The length of string will be odd. It will always be a valid string.
Example, 1AA0 will not be given as an input.

Examples:

Input : 1A0B1
Output : 1
1 AND 0 OR 1 = 1

Input : 1C1B1B0A0
Output : 0
Source : Microsoft online round for internship 2017

Approach: traverse the string and update the i+2 value to the result of the operation between i, i+1, and i+2. 
          then update i = i+2 to repeat.

public int evaluateExpression(String s) {
    if (s == null || s.length() == 0) {
        System.out.println("invalid input");
        return -1;
    }
    char[] array = s.toCharArray[];
    int n = array.length;
    for (int i = 0, i < n; i = i+2) {
        if (i+1 < n && i+2 < n) {
            if (array[i+1] == 'A') {
                if (array[i] == '0' || array[i+2] == '0') array[i+2] = '0';
                else array[i+2] = '1';
            } else if (array[i+1] == 'B') {
                if (array[i] == '1' || array[i+2] == '1') array[i+2] = '1';
                else array[i+2] = '0';
            } else if (array[i+1] == 'c') {
                if (array[i] != array[i+2]) array[i+2] = '1';
                else array[i+2] = '0';
            } else {
                System.out.println("invalid input");
                return -1;
            }
        }
    }
    return array[n-1] - '0';
}
