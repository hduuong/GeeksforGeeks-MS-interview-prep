Given an integer x, find square root of it. If x is not a perfect square, then return floor(âˆšx).

Examples:

Input: x = 4
Output: 2

Input: x = 11
Output: 3

Approach: do binary search. since we now 0 <= answer <= input.
            compute mid = (start+end)/2;
            if  mid*mid == input return mid;
            if  mid*mid < input, set start = mid+1;
            if  mid*mid > input, set end = mid-1;
            
public floorSquare(int x) {
    if (x == 0 || x == 1) return x;
    
    int start = 1, end = x, ans;
    while (start <= end) {
        int mid = (start + end) / 2;
        
        if (mid*mid == x) return mid;
        
        if (mid*mid < x) {
            start = mid+1;
            ans = mid;
        }
        if (mid*mid > x) {
            end = mid-1;
        }
    }
    return ans;
}
