Given an array of size n and an integer k, return the of count of distinct numbers in all windows of size k.

Example:

Input:  arr[] = {1, 2, 1, 3, 4, 2, 3};
            k = 4
Output:
3
4
4
3

Explanation:
First window is {1, 2, 1, 3}, count of distinct numbers is 3
Second window is {2, 1, 3, 4} count of distinct numbers is 4
Third window is {1, 3, 4, 2} count of distinct numbers is 4
Fourth window is {3, 4, 2, 3} count of distinct numbers is 3

public void countAndPrintDistinctElements(int[] array, int k) {
    if (array == null || array.length == 0 || k <= 0) {
        System.out.println("invalid input");
        return;
    }
    if (array.length == 1) {
        System.out.println(1);
        return;
    }
    if (k == 1) {
        for (int i = 0, i < array.length; i++) System.out.println(1);
        return;
    }
    
    HashMap<Integer, Integer> map = new HashMap<>();
    int count = 0;
    for (int i = 0; i < k; i++) {
        if (!map.containsKey(array[i])) {
            map.put(array[i], 1);
            count++;
        } else {
            map.put(array[i],map.get(array[i])++);
        }
    }
    System.out.println(count);
    
    for (int i = k; i < array.length; i++) {
        if (map.get(array[i-k]) == 1) {
            map.remove(array[i-k]);
            count--;
        } else {
            map.put(array[i-k],map.get(array[i-k])--);
        }
        
        if (!map.containsKey(array[i]) {
            map.put(array[i], 1);
            count++;
        } else {
            map.put(array[i], map.get(array[i])++);
        }
        System.out.println(count);
    }
}
