Given a number having only one ‘1’ and all other ’0’s in its binary representation, find position of the only set bit. 
Source: Microsoft Interview | 18

public int findPosition(int n) {
    if (!isPowerOfTwo(n)) return -1;
    unsigned i = 1, pos = 1;
    while(!n&i){
        pos++;
        i = i << 1;
    }
}

private boolea isPowerOfTwo(int n) {
    return n!=0 && (n&(n-1) == 0);
}
If we subtract a power of 2 numbers by 1 then all unset bits after the only set bit become set; and the set bit become unset.

For example for 4 ( 100) and 16(10000), we get following after subtracting 1
3 –> 011
15 –> 01111
