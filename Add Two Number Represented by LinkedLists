Given two numbers represented by two lists, write a function that returns sum list. 
The sum list is list representation of addition of two input numbers.

Example 1

Input:
  First List: 5->6->3  // represents number 365
  Second List: 8->4->2 //  represents number 248
Output
  Resultant list: 3->1->6  // represents number 613
Example 2

Input:
  First List: 7->5->9->4->6  // represents number 64957
  Second List: 8->4 //  represents number 48
Output
  Resultant list: 5->0->0->5->6  // represents number 65005
  
  
public Node addTwoList(Node l1, Node l2) {
    if (l1 == null && l2 == null) return null;
    if (l1 == null) return l2;
    if (l2 == null) return l1;
    
    Node dummy = new Node(0);
    Node current = dummy;
    int carry = 0;
    
    while (l1 != null || l2 != null) {
        int sum = (l1 == null) ? 0 : l1.data + (l2 == null) ? 0 : l2.data + carry;
        current.next = new Node(sum%10);
        carray = sum/10;
        
        if (l1 != null) l1 = l1.next;
        if (l2 != null) l2 = l2.next;
        current = current.next;
    }
    
    if (carry != 0) 
        current.next = new Node(1);
    
    return dummy.next;
}
