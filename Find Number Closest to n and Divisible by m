Given two integers n and m. The problem is to find the number closest to n and divisible by m. 
If there are more than one such number, then output the one having maximum absolute value. 
If n is completely divisible by m, then output n only. Time complexity of O(1) is required.

Constraints: m != 0

Examples:

Input : n = 13, m = 4
Output : 12

Input : n = -15, m = 6
Output : -18
Both -12 and -18 are closest to -15, but
-18 has the maximum absolute value.

public int findClosestNumber(int n, int m) {
    if (n%m == 0) return n;
    int q = n/m;
    int n1 = m*q;
    int n2 = (n*m > 0) ? m*(p+1) : m*(p-1);
    if (Math.abs(n-n1) < Math.abs(n-n2)) return n1;
    return n2;
}
